{"version":3,"sources":["components/redux/auth/auth-selectors.js","components/Navigation.js","components/redux/auth/auth-operations.js","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/views/RegisterView.js","components/views/LoginView.js","components/redux/contact/contact-selector.js","components/redux/contact/contact-operations.js","components/Form/ContactForm.js","components/Contact/ContactsList.js","components/redux/contact/contact-action.js","components/Filter/Filter.js","components/views/ContactView.js","components/PrivateRoute.js","components/PublicRoute.js","components/views/HomePage.js","App.js","components/redux/auth/auth-reducers.js","components/redux/contact/contact-reducer.js","components/redux/store.js","index.js"],"names":["getIsAuthenticated","state","auth","isAuthenticated","getUserName","user","name","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoading","useSelector","to","exact","style","activeStyle","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","response","data","logIn","logOut","_","getCurrentUser","thunkAPI","getState","persistedToken","get","useStyles","makeStyles","theme","button","margin","spacing","UserMenu","classes","dispatch","useDispatch","className","Button","variant","size","type","onClick","fontFamily","AuthNav","header","justifyContent","alignItems","borderBottom","AppBar","paper","marginTop","flexDirection","avatar","backgroundColor","palette","secondary","main","form","width","submit","RegisterView","useState","setName","email","setEmail","password","setPassword","handleChange","target","value","reset","Container","component","maxWidth","CssBaseline","Avatar","Typography","onSubmit","e","preventDefault","noValidate","Grid","container","item","xs","TextField","autoComplete","required","fullWidth","id","label","onChange","autoFocus","Box","mt","LoginView","event","getContact","contacts","contact","getFilter","filter","getVisibleContact","normalizedFilter","toLowerCase","text","includes","getFiteredContact","fetchContact","addContact","number","deleteContact","contactId","delete","root","ContactForm","setNumber","find","alert","placeholder","disabled","startIcon","ContactsList","length","List","map","ListItem","ListItemAvatar","ListItemText","primary","onDeleteContact","actions","changeFilter","createAction","Filter","ContactView","useEffect","PtivateRoute","redirectTo","children","routeProps","isLoggedIn","PublicRoute","restricted","HomePage","App","path","PrivateRoute","initialUserState","createReducer","fulfilled","payload","setError","error","rejected","combineReducers","pending","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d31d538.chunk.js","sourcesContent":["export const getIsAuthenticated = state => state.auth.isAuthenticated;\r\nexport const getUserName = state => state.auth.user.name;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getIsAuthenticated } from './redux/auth/auth-selectors';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#3700B3',\r\n  },\r\n};\r\n\r\nfunction Navigation() {\r\n  const isLoading = useSelector(getIsAuthenticated);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n        Home\r\n      </NavLink>\r\n      {isLoading && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          style={styles.link}\r\n          activeStyle={styles.activeLink}\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n// import authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post('/users/signup', credentials);\r\n      token.set(response.data.token);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\nexport const logIn = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post('/users/login', credentials);\r\n      token.set(response.data.token);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\nexport const logOut = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post('/users/logout');\r\n      token.unset();\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\nexport const getCurrentUser = createAsyncThunk(\r\n  'auth/getCurrentUser',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      return error.rejectWithValue();\r\n    }\r\n  },\r\n);\r\n// export const register = credentials => async dispatch => {\r\n//   dispatch(authActions.registerRequest());\r\n\r\n//   try {\r\n//     const response = await axios.post('/users/signup', credentials);\r\n\r\n//     token.set(response.data.token);\r\n//     dispatch(authActions.registerSuccess(response.data));\r\n//   } catch (error) {\r\n//     dispatch(authActions.registerError(error));\r\n//   }\r\n// };\r\n\r\n// export const logIn = credentials => async dispatch => {\r\n//   dispatch(authActions.loginRequest());\r\n\r\n//   try {\r\n//     const response = await axios.post('/users/login', credentials);\r\n//     token.set(response.data.token);\r\n//     dispatch(authActions.loginSuccess(response.data));\r\n//   } catch (error) {\r\n//     dispatch(authActions.loginError(error));\r\n//   }\r\n// };\r\n\r\n// export const logOut = () => async dispatch => {\r\n//   dispatch(authActions.logoutRequest());\r\n\r\n//   try {\r\n//     await axios.post('/users/logout');\r\n//     token.unset();\r\n//     dispatch(authActions.logoutSuccess());\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//     dispatch(authActions.logoutError(error));\r\n//   }\r\n// };\r\n\r\n// export const getCurrentUser = () => async (dispatch, getState) => {\r\n//   const {\r\n//     auth: { token: persistedToken },\r\n//   } = getState();\r\n//   if (!persistedToken) {\r\n//     return;\r\n//   }\r\n\r\n//   token.set(persistedToken);\r\n//   dispatch(authActions.getCurrentUserRequest());\r\n//   try {\r\n//     const response = await axios.get('/users/current');\r\n//     dispatch(authActions.getCurrentUserSuccess(response.data));\r\n//   } catch (error) {\r\n//     dispatch(authActions.getCurrentUserError(error));\r\n//   }\r\n// };\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserName } from '../redux/auth/auth-selectors';\r\nimport { logOut } from '../redux/auth/auth-operations';\r\nimport './UserMenu.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\nfunction UserMenu() {\r\n  const classes = useStyles();\r\n\r\n  const name = useSelector(getUserName);\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogOut = () => dispatch(logOut());\r\n  return (\r\n    <div className=\"container__menu\">\r\n      <span className=\"avatar__menu\"> </span>\r\n      <span className=\"name__menu\"> {name}</span>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        type=\"submit\"\r\n        className={classes.button}\r\n        onClick={onLogOut}\r\n      >\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserMenu;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n    fontFamily: 'Roboto',\r\n  },\r\n  activeLink: {\r\n    color: '#3700B3',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Sing up\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Sing in\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { getIsAuthenticated } from './redux/auth/auth-selectors';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nfunction AppBar() {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <>\r\n      <header style={styles.header}>\r\n        <Navigation />\r\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppBar;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { register } from '../redux/auth/auth-operations';\r\nimport './ViewPage.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {'Copyright © '}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Your Website\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction RegisterView() {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(register({ name, email, password }));\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                value={name}\r\n                onChange={handleChange}\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={handleChange}\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          {/* <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>{/* <Copyright /> */}</Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// function RegisterView() {\r\n// const [name, setName] = useState('');\r\n// const [email, setEmail] = useState('');\r\n// const [password, setPassword] = useState('');\r\n// const dispatch = useDispatch();\r\n\r\n// const handleChange = ({ target }) => {\r\n//   const { name, value } = target;\r\n//   switch (name) {\r\n//     case 'name':\r\n//       setName(value);\r\n//       break;\r\n//     case 'email':\r\n//       setEmail(value);\r\n//       break;\r\n//     case 'password':\r\n//       setPassword(value);\r\n//       break;\r\n//     default:\r\n//       return;\r\n//   }\r\n// };\r\n\r\n// const handleSubmit = e => {\r\n//   e.preventDefault();\r\n//   dispatch(register({ name, email, password }));\r\n//   reset();\r\n// };\r\n// const reset = () => {\r\n//   setName('');\r\n//   setEmail('');\r\n//   setPassword('');\r\n// };\r\n//   return (\r\n//     <div>\r\n//       <h1>Сторінка реєстрації </h1>\r\n\r\n//       <form\r\n//         onSubmit={handleSubmit}\r\n//         className=\"form__regiser\"\r\n//         autoComplete=\"off\"\r\n//       >\r\n//         <label className=\"label__regiser\">\r\n//           Ім’я\r\n//           <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\r\n//         </label>\r\n\r\n//         <label className=\"label__regiser\">\r\n//           Почта\r\n//           <input\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             value={email}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </label>\r\n\r\n//         <label className=\"label__regiser\">\r\n//           Пароль\r\n//           <input\r\n//             type=\"password\"\r\n//             name=\"password\"\r\n//             value={password}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </label>\r\n\r\n//         <button type=\"submit\">Зареєструватися</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default RegisterView;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logIn } from '../redux/auth/auth-operations';\r\nimport './ViewPage.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import Link from '@material-ui/core/Link';\r\n// import Grid from '@material-ui/core/Grid';\r\n\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {/* {'Copyright © '}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Your Website\r\n//       </Link>{' '} */}\r\n//       {/* {new Date().getFullYear()} */}\r\n//       {'.'}\r\n//     </Typography>\r\n//   );\r\n// }\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction LoginView() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    switch (name) {\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    dispatch(logIn({ email, password }));\r\n\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            label=\"Password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handleChange}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>{/* <Copyright /> */}</Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// export function LoginView() {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const dispatch = useDispatch();\r\n//   const handleChange = ({ target }) => {\r\n//     const { name, value } = target;\r\n//     switch (name) {\r\n//       case 'email':\r\n//         setEmail(value);\r\n//         break;\r\n//       case 'password':\r\n//         setPassword(value);\r\n//         break;\r\n//       default:\r\n//         return;\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = event => {\r\n//     event.preventDefault();\r\n//     dispatch(logIn({ email, password }));\r\n\r\n//     reset();\r\n//   };\r\n//   const reset = () => {\r\n//     setEmail('');\r\n//     setPassword('');\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       <h1>Сторінка логіну</h1>\r\n\r\n//       <form onSubmit={handleSubmit} className=\"form__login\" autoComplete=\"off\">\r\n//         <label className=\"label__login\">\r\n//           Почта\r\n//           <input\r\n//             type=\"email\"\r\n//             name=\"email\"\r\n//             value={email}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </label>\r\n\r\n//         <label className=\"label__login\">\r\n//           Пароль\r\n//           <input\r\n//             type=\"password\"\r\n//             name=\"password\"\r\n//             value={password}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </label>\r\n//         <Button\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           disableElevation\r\n//           type=\"submit\"\r\n//         >\r\n//           Увійти\r\n//         </Button>\r\n//         {/* <button type=\"submit\">Увійти</button> */}\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\nexport default LoginView;\r\n","export const getContact = state => state.contacts.contact;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoding = state => state.contacts.loding;\r\n\r\nexport const getVisibleContact = state => {\r\n  const contacts = getContact(state);\r\n  const filter = getFilter(state);\r\n\r\n  const getFiteredContact = contacts => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(text =>\r\n      text.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  return getFiteredContact(contacts);\r\n};\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContact = createAsyncThunk(\r\n  'contact/fetchContact',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get(`/contacts`);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\nexport const addContact = createAsyncThunk(\r\n  'contact/addContact',\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    const contact = { name, number };\r\n    try {\r\n      const { data } = await axios.post(`/contacts`, contact);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\nexport const deleteContact = createAsyncThunk(\r\n  'contact/deleteContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(`/contacts/${contactId}`);\r\n      return contactId;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getContact } from '../redux/contact/contact-selector';\r\nimport { addContact } from '../redux/contact/contact-operations';\r\nimport './ContactForm.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\nfunction ContactForm() {\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContact);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const auditContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (auditContact) {\r\n      alert(`Контакт ${name} з таким ім’ям вже є.`);\r\n      reset();\r\n      return;\r\n    }\r\n    dispatch(addContact({ name, number }));\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  return (\r\n    <>\r\n      <form\r\n        className={classes.root}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <TextField\r\n          size=\"small\"\r\n          label=\"Name\"\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Jony Dep\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <TextField\r\n          size=\"small\"\r\n          label=\"Phone\"\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          name=\"number\"\r\n          placeholder=\"111-11-11\"\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          type=\"submit\"\r\n          disabled={name === '' || number === ''}\r\n          className={classes.button}\r\n          startIcon={<SaveIcon />}\r\n        >\r\n          Save\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContact } from '../redux/contact/contact-operations';\r\nimport './ContactsList.css';\r\nimport { getVisibleContact } from '../redux/contact/contact-selector';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nfunction ContactsList() {\r\n  const classes = useStyles();\r\n\r\n  const contacts = useSelector(getVisibleContact);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <>\r\n      {!contacts.length && <div>Немає жодного контакту</div>}\r\n\r\n      <List className={classes.root}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ListItem key={id}>\r\n            <ListItemAvatar>\r\n              <Avatar></Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={name} />\r\n            <ListItemText primary={number} />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              className={classes.button}\r\n              startIcon={<DeleteIcon />}\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\nexport default ContactsList;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// // fetchContact.pending\r\n// const fetchContactRequest = createAction('contact/fetchContactRequest');\r\n// // fetchContact.fulfilled;\r\n// const fetchContactSuccess = createAction('contact/fetchContactSuccess');\r\n// // fetchContact.rejected;\r\n// const fetchContactError = createAction('contact/fetchContactError');\r\n\r\nconst changeFilter = createAction('contact/changeFilter');\r\n\r\nconst actions = {\r\n  changeFilter,\r\n};\r\nexport default actions;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport actions from '../redux/contact/contact-action';\r\nimport './Filter.css';\r\nimport { getFilter } from '../redux/contact/contact-selector';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <TextField\r\n      size=\"small\"\r\n      label=\"Search\"\r\n      variant=\"outlined\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={event => dispatch(actions.changeFilter(event.target.value))}\r\n    />\r\n  );\r\n}\r\nexport default Filter;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport ContactForm from '../Form/ContactForm';\r\nimport ContactsList from '../Contact/ContactsList';\r\nimport Filter from '../Filter/Filter';\r\nimport { fetchContact } from '../redux/contact/contact-operations';\r\n\r\nfunction ContactView() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(fetchContact()), [dispatch]); // dispatch як залежність.\r\n  return (\r\n    <>\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactsList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactView;\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from './redux/auth/auth-selectors';\r\n\r\nfunction PtivateRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default PtivateRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsAuthenticated } from './redux/auth/auth-selectors';\r\n\r\nfunction PublicRoute({ isAuthenticated, redirectTo, children, ...routeProps }) {\r\n  const isLoggedIn = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\nexport default PublicRoute;\r\n","import React from 'react';\r\n\r\nconst HomePage = () => (\r\n  <div className=\"container__home\">\r\n    <h1 className=\"title__home\">Вітаю</h1>\r\n  </div>\r\n);\r\n\r\nexport default HomePage;\r\n","// import ContactsList from './components/Contact/';\r\n// import ContactForm from './components/Form/';\r\n// import Filter from './components/Filter/';\r\nimport './App.css';\r\nimport { Switch } from 'react-router-dom';\r\nimport AppBar from './components/AppBar';\r\n// import HomePage from './components/views/HomePage';\r\nimport RegisterView from './components/views/RegisterView';\r\nimport LoginView from './components/views/LoginView';\r\nimport ContactView from './components/views/ContactView';\r\n// import { authOperations } from './redux/auth';\r\n// import { connect } from 'react-redux';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport HomeView from './components/views/HomePage';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCurrentUser } from './components/redux/auth/auth-operations';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(getCurrentUser()), [dispatch]); // dispatch як залежність.\r\n  return (\r\n    <div className=\"Containet\">\r\n      <AppBar />\r\n\r\n      <Switch>\r\n        <PublicRoute exact path=\"/\">\r\n          <HomeView />\r\n        </PublicRoute>\r\n        <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\r\n          <RegisterView />\r\n        </PublicRoute>\r\n\r\n        <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\r\n          <LoginView />\r\n        </PublicRoute>\r\n        {/* <Route path=\"/register\" component={RegisterView} /> */}\r\n        {/* <Route path=\"/login\" component={LoginView} /> */}\r\n        {/* <Route path=\"/contacts\" component={ContactView} /> */}\r\n        <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n          <ContactView />\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\n// import actionsStatus from './auth-actions';\r\nimport { register, logIn, logOut, getCurrentUser } from './auth-operations';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [register.fulfilled]: (_, { payload }) => payload.user,\r\n  [logIn.fulfilled]: (_, { payload }) => payload.user,\r\n  [logOut.fulfilled]: () => initialUserState,\r\n  [getCurrentUser.fulfilled]: (_, { payload }) => payload,\r\n  // [actionsStatus.registerSuccess]: (_, { payload }) => payload.user,\r\n  // [actionsStatus.loginSuccess]: (_, { payload }) => payload.user,\r\n  // [actionsStatus.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [register.fulfilled]: (_, { payload }) => payload.token,\r\n  [logIn.fulfilled]: (_, { payload }) => payload.token,\r\n  [logOut.fulfilled]: () => null,\r\n  // [actionsStatus.registerSuccess]: (_, { payload }) => payload.token,\r\n  // [actionsStatus.loginSuccess]: (_, { payload }) => payload.token,\r\n  // [actionsStatus.logoutSuccess]: () => null,\r\n});\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [register.rejected]: setError,\r\n  [logIn.rejected]: setError,\r\n  [logOut.rejected]: setError,\r\n  [getCurrentUser.rejected]: setError,\r\n  // [actionsStatus.registerError]: setError,\r\n  // [actionsStatus.loginError]: setError,\r\n  // [actionsStatus.logoutError]: setError,\r\n  // [actionsStatus.getCurrentUserError]: setError,\r\n});\r\nconst isAuthenticated = createReducer(false, {\r\n  [register.fulfilled]: () => true,\r\n  [register.rejected]: () => false,\r\n  [logIn.fulfilled]: () => true,\r\n  [logIn.rejected]: () => false,\r\n  [logOut.fulfilled]: () => false,\r\n  [getCurrentUser.fulfilled]: () => true,\r\n  [getCurrentUser.rejected]: () => false,\r\n  // [actionsStatus.registerSuccess]: () => true,\r\n  // [actionsStatus.loginSuccess]: () => true,\r\n  // [actionsStatus.getCurrentUserSuccess]: () => true,\r\n  // [actionsStatus.registerError]: () => false,\r\n  // [actionsStatus.loginError]: () => false,\r\n  // [actionsStatus.getCurrentUserError]: () => false,\r\n  // [actionsStatus.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isAuthenticated,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport actions from './contact-action';\r\nimport { fetchContact, addContact, deleteContact } from './contact-operations';\r\n\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst contact = createReducer([], {\r\n  [fetchContact.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\nconst error = createReducer(null, {\r\n  [fetchContact.rejected]: (_, { payload }) => payload,\r\n  [fetchContact.pending]: () => null,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContact.pending]: () => true,\r\n  [fetchContact.fulfilled]: () => false,\r\n  [fetchContact.rejected]: () => false,\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\nexport default combineReducers({\r\n  contact,\r\n  loading,\r\n  filter,\r\n  error,\r\n});\r\n","import authReducer from './auth/auth-reducers';\r\nimport contactReducer from './contact/contact-reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// import logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './components/redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}